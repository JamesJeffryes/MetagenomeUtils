
package us.kbase.metagenomeutils;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * <p>Original spec-file type: ExtractBinAsAssemblyResult</p>
 * <pre>
 * assembly_ref_list: list of generated Assembly object reference
 * report_name: report name generated by KBaseReport
 * report_ref: report reference generated by KBaseReport
 * </pre>
 * 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
    "assembly_ref_list",
    "report_name",
    "report_ref"
})
public class ExtractBinAsAssemblyResult {

    @JsonProperty("assembly_ref_list")
    private List<String> assemblyRefList;
    @JsonProperty("report_name")
    private java.lang.String reportName;
    @JsonProperty("report_ref")
    private java.lang.String reportRef;
    private Map<java.lang.String, Object> additionalProperties = new HashMap<java.lang.String, Object>();

    @JsonProperty("assembly_ref_list")
    public List<String> getAssemblyRefList() {
        return assemblyRefList;
    }

    @JsonProperty("assembly_ref_list")
    public void setAssemblyRefList(List<String> assemblyRefList) {
        this.assemblyRefList = assemblyRefList;
    }

    public ExtractBinAsAssemblyResult withAssemblyRefList(List<String> assemblyRefList) {
        this.assemblyRefList = assemblyRefList;
        return this;
    }

    @JsonProperty("report_name")
    public java.lang.String getReportName() {
        return reportName;
    }

    @JsonProperty("report_name")
    public void setReportName(java.lang.String reportName) {
        this.reportName = reportName;
    }

    public ExtractBinAsAssemblyResult withReportName(java.lang.String reportName) {
        this.reportName = reportName;
        return this;
    }

    @JsonProperty("report_ref")
    public java.lang.String getReportRef() {
        return reportRef;
    }

    @JsonProperty("report_ref")
    public void setReportRef(java.lang.String reportRef) {
        this.reportRef = reportRef;
    }

    public ExtractBinAsAssemblyResult withReportRef(java.lang.String reportRef) {
        this.reportRef = reportRef;
        return this;
    }

    @JsonAnyGetter
    public Map<java.lang.String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperties(java.lang.String name, Object value) {
        this.additionalProperties.put(name, value);
    }

    @Override
    public java.lang.String toString() {
        return ((((((((("ExtractBinAsAssemblyResult"+" [assemblyRefList=")+ assemblyRefList)+", reportName=")+ reportName)+", reportRef=")+ reportRef)+", additionalProperties=")+ additionalProperties)+"]");
    }

}
